[
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 1523.96,
        "media_src": "13-Parsing Techniques4.m4v",
        "number": 13,
        "poster_uid": "2016/08/26/09/16/16/6e549064-cf0e-46f2-a27a-1d33b8536314/13-Parsing Techniques.jpg",
        "release_at": "2016-08-26T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/s01e13-parsing-techniques"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We look at two different techniques to parse a simple expression language: handwritten parsers and parser combinators.",
        "title": "Parsing Techniques",
        "video_id": "4cd4bec7-b5d4-43a3-a520-ea888a9bbed3"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "table-views"
        ],
        "media_duration": 1182.24,
        "media_src": "Generic Table View Controllers.m4v",
        "number": 6,
        "poster_uid": "2016/07/13/16/01/16/2d60dad1-800c-44f6-a019-87da4396518c/Generic Table View Controllers.jpg",
        "release_at": "2016-07-15T13:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E06-generic-table-view-controllers"
            }
        ],
        "sample_duration": 78.52,
        "sample_src": "Generic Table View Controllers Preview.m4v",
        "subscription_only": true,
        "synopsis": "We leverage Swift's generics to keep our table view controller code clean.",
        "title": "Generic Table View Controllers",
        "video_id": "7f3b5cae-7718-4ca1-acfe-99d1e9b5399d"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 1691.04,
        "media_src": "14-Account Tree v2.m4v",
        "number": 14,
        "poster_uid": "2016/08/29/12/03/05/4eeb3cda-a6b4-4fb6-bb41-060a62df66af/13-Account Tree.jpg",
        "release_at": "2016-09-02T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E14-growing-trees-with-classes-and-structs"
            }
        ],
        "sample_duration": 122.68,
        "sample_src": "14-Account Tree Preview v2.m4v",
        "subscription_only": true,
        "synopsis": "We build a tree structure from an array of Ledger account names. We first implement the tree using a class, and then we refactor it to a struct and discuss the differences and tradeoffs involved.",
        "title": "Growing Trees with Classes and Structs",
        "video_id": "0902a184-0fbc-4649-bbc1-e7b02b8c3552"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [],
        "media_duration": 834.4,
        "media_src": "09-QA.m4v",
        "number": 9,
        "poster_uid": "2016/08/04/16/28/26/f4debdbc-6ae1-4e99-85cc-4386c6e16999/Q&A.jpg",
        "release_at": "2016-08-05T13:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "In this episode, we answer some of the questions we've received over the past few weeks. We cover networking, table views, stack views, our App class, and testing.",
        "title": "Q&A",
        "video_id": "e985bcbf-fbbe-49f8-8394-ca04b9a7782a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 1543.44,
        "media_src": "12-Evaluation 2.m4v",
        "number": 12,
        "poster_uid": "2016/08/18/06/06/42/d9bec907-0d18-4a5c-9daf-11774122ab21/12-Evaluation 2.jpg",
        "release_at": "2016-08-19T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/s01e12-evaluating-transactions"
            }
        ],
        "sample_duration": 105,
        "sample_src": "12-Evaluation 2 - Preview.m4v",
        "subscription_only": true,
        "synopsis": "Writing the code for evaluating transactions required continuous refactoring to keep our code simple and clean.",
        "title": "Evaluating Transactions",
        "video_id": "1af72537-a54c-4b90-a5c3-92e297eaecb1"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 1776.24,
        "media_src": "11-Evaluation 1.m4v",
        "number": 11,
        "poster_uid": "2016/08/12/08/02/05/bef3634a-593f-4de2-a4bf-0e23214b6b32/11-Evaluation 1.jpg",
        "release_at": "2016-08-12T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/s01e11-evaluating-expressions"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Expressions are at the heart of Ledger. We write an evaluator for this expression language in a test-driven way.",
        "title": "Evaluating Expressions",
        "video_id": "20f00305-68ee-4230-8d4c-7d51de34f7ad"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "functional-programming",
            "ledger-mac-app"
        ],
        "media_duration": 982.32,
        "media_src": "15-Parser Combinators 1.m4v",
        "number": 15,
        "poster_uid": "2016/09/06/12/24/31/b0d2e09b-355c-4dde-8012-449aae160e8d/15-Parser Combinators 1.jpg",
        "release_at": "2016-09-09T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E15-building-parser-combinators-part-1"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Join us in the functional programming gym to stretch your object-oriented comfort zone while we lay the groundwork for a parser combinator library.",
        "title": "Building Parser Combinators (Part 1)",
        "video_id": "3957fab8-dc40-44ff-b021-04238850c5ae"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 465,
        "media_src": "10-Ledger Introduction.m4v",
        "number": 10,
        "poster_uid": "2016/08/12/08/01/34/bda9e6f0-b3e4-40a0-b852-048c95c2c393/10-Ledger Introduction.jpg",
        "release_at": "2016-08-12T14:59:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/LedgerGUI"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We give a quick introduction to Ledger itself and to the Mac app we're going to build.",
        "title": "Introduction",
        "video_id": "9a2a862d-1838-4098-a487-622c5ddcf373"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "type-safe-api-wrappers",
            "libraries",
            "networking"
        ],
        "media_duration": 1369.68,
        "media_src": "Networking1.m4v",
        "number": 1,
        "poster_uid": "2016/06/10/08/59/12/8843919b-8cee-4824-bc1c-d2f78f2bdad1/Networking poster.jpg",
        "release_at": "2016-06-17T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E01-networking"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We make use of Swift's generics and structs to build a simple network layer with great testability.",
        "title": "Tiny Networking Library",
        "video_id": "9fc9f40b-dea9-4825-a2f2-3862cf74d009"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "networking"
        ],
        "media_duration": 1310.32,
        "media_src": "Loading View Controllers - new intro.m4v",
        "number": 3,
        "poster_uid": "2016/06/24/10/29/04/844ef427-be14-47b6-9220-21750e51288c/poster.jpg",
        "release_at": "2016-06-24T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E03-loading-view-controllers"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We explore different approaches to factor out asynchronous loading code from view controllers, using protocols, container view controllers, and generics.",
        "title": "Loading View Controllers",
        "video_id": "00674f97-ab30-4a55-bc53-aa80fbb4ca5c"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1303,
        "media_src": "Stack Views with Enums.m4v",
        "number": 7,
        "poster_uid": "2016/07/13/16/51/48/5f3cecc8-c6da-4b83-81e8-d29943cd7bcc/Stack Views with Enums.jpg",
        "release_at": "2016-07-22T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E07-stack-views-with-enums"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We create an abstraction around stack views using enums to specify UI elements in a declarative style.",
        "title": "Stack Views with Enums",
        "video_id": "1655988b-fa92-4b7b-8edb-88089c115fac"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "type-safe-api-wrappers",
            "networking"
        ],
        "media_duration": 1120.8,
        "media_src": "Networking POST Requests-1.m4v",
        "number": 8,
        "poster_uid": "2016/07/15/12/19/09/06d2c7db-7ad4-4f45-9e03-8872e19a0cf4/Networking POST Requests.jpg",
        "release_at": "2016-07-29T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E08-networking-post-requests"
            }
        ],
        "sample_duration": 87.12,
        "sample_src": "Networking POST Requests-1 Preview.m4v",
        "subscription_only": true,
        "synopsis": "We add POST support to a simple networking layer, using Swift's enums with associated values and generics.",
        "title": "Adding POST Requests",
        "video_id": "f292aec0-4003-49af-b8cb-055b5e658766"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1214.528,
        "media_src": "Connecting View Controllers.m4v",
        "number": 5,
        "poster_uid": "2016/07/07/13/31/56/9d9b51f5-7546-4aba-a702-892decc7e15d/Connecting View Controllers.jpg",
        "release_at": "2016-07-08T13:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E05-connecting-view-controllers"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We refactor our code by moving the app's flow from the storyboard into a separate coordinator class. This avoids view controllers having implicit knowledge of their context.",
        "title": "Connecting View Controllers",
        "video_id": "831c191e-568f-42f6-9925-b9327606e139"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "functional-programming"
        ],
        "media_duration": 1395.92,
        "media_src": "Rendering CommonMark1.m4v",
        "number": 2,
        "poster_uid": "2016/06/09/16/35/27/4b9552d4-2386-4e59-b27d-c24d2b796d48/Rendering CommonMark poster.jpg",
        "release_at": "2016-06-17T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E02-rendering-commonmark"
            }
        ],
        "sample_duration": 76.76,
        "sample_src": "CommonMark Preview2.m4v",
        "subscription_only": true,
        "synopsis": "We create attributed strings from CommonMark. We continually refactor our code to make the central logic short and understandable.",
        "title": "Rendering CommonMark",
        "video_id": "7ccc6311-d8e5-4cad-8a09-1bc6f0d14a72"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "networking"
        ],
        "media_duration": 1413.28,
        "media_src": "25 Network Caching.m4v",
        "number": 25,
        "poster_uid": "2016/11/13/09/56/35/6a29d55c-ac8b-4037-a706-3c8964d17db1/25 Network Caching.jpg",
        "release_at": "2016-11-18T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E25-network-caching"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We add support for caching network requests without altering our original networking abstraction.",
        "title": "Adding Caching",
        "video_id": "29d76e46-dd18-42a1-8d90-4c56df063fff"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [],
        "media_duration": 1447.24,
        "media_src": "23 Splitting Arrays.m4v",
        "number": 23,
        "poster_uid": "2016/11/01/15/53/56/b0ded07f-6251-41d7-930f-02daef0a066a/23 Splitting Arrays.jpg",
        "release_at": "2016-11-04T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project & Tests",
                "url": "https://github.com/objcio/S01E23-splitting-arrays"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We talk about a familiar but surprisingly tricky problem: splitting an array into groups of elements. We discuss the pros and cons of our own solutions along with the solutions people sent us via Twitter!",
        "title": "Splitting Arrays",
        "video_id": "e439a18a-b9ef-43d3-a8fe-4aef4b5484c9"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 967.92,
        "media_src": "21-Structs and Mutation.m4v",
        "number": 21,
        "poster_uid": "2016/10/18/11/51/43/fd4bbe35-4e8a-45c1-8d12-3b3d8b2f6415/21-Structs and Mutation.jpg",
        "release_at": "2016-10-21T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E21-structs-and-mutation"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We can change structs by mutation, functional chaining, and inout parameters. We discuss how they differ at the call site and why they\u2019re all equivalent.",
        "title": "Structs and Mutation",
        "video_id": "a614dcc3-543b-4501-91c2-2bbf6a7e3766"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 1111.84,
        "media_src": "17-Ledger GUI Architecture v2.m4v",
        "number": 17,
        "poster_uid": "2016/09/13/11/08/08/189c89ca-66ed-4ce5-84da-a4d6c872c735/17-Ledger GUI Architecture.jpg",
        "release_at": "2016-09-23T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E17-ledger-gui-architecture"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We connect multiple view controllers using a coordinator and callback functions. We simplify the control flow by refactoring the UI state into its own struct.",
        "title": "Architecture",
        "video_id": "49731cda-76ad-4f4a-9f2f-4e88bfa637ed"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "functional-programming"
        ],
        "media_duration": 1385.52,
        "media_src": "19-From Runtime Programming to Functions.m4v",
        "number": 19,
        "poster_uid": "2016/09/30/21/32/44/b0cb7188-01b0-48ef-8680-08a5d90dc96d/19-From Runtime Programming to Functions.jpg",
        "release_at": "2016-10-07T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E19-from-runtime-programming-to-functions"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We build a flexible sort descriptor abstraction on top of Swift's native sort methods, which is dynamic and type safe.",
        "title": "From Runtime Programming to Functions",
        "video_id": "9ad1b3e9-5ca9-47d8-b118-30e4689eb756"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [],
        "media_duration": 967.08,
        "media_src": "30 Interfaces 3.mp4",
        "number": 30,
        "poster_uid": "2016/12/29/14/04/08/c6105219-22cf-480c-8f6f-95d857be9969/30 Interfaces.jpg",
        "release_at": "2016-12-30T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": 98.6,
        "sample_src": "30 Interfaces Preview 3.mp4",
        "subscription_only": true,
        "synopsis": "We talk about the importance of types and interfaces as tools to express your intent precisely and to set the proper boundaries.",
        "title": "Interfaces",
        "video_id": "d7c7a3f0-fc27-49d2-a62f-b3645bc15d7a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 929.2,
        "media_src": "24 Delegates and Callbacks.m4v",
        "number": 24,
        "poster_uid": "2016/11/04/16/20/44/5c3f1a07-8748-4a00-acb1-15c809e7e2f9/24 Delegates and Callbacks.jpg",
        "release_at": "2016-11-11T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E24-delegates-callbacks"
            }
        ],
        "sample_duration": 75.48,
        "sample_src": "24 Delegates and Callbacks Preview.m4v",
        "subscription_only": true,
        "synopsis": "We discuss the pros and cons of delegates versus callback functions and why delegate protocols are always class only.",
        "title": "Delegates & Callbacks",
        "video_id": "8716e74c-0a4f-4ce6-8c99-d1b7543546bd"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "ledger-mac-app"
        ],
        "media_duration": 960.28,
        "media_src": "18-Adding Search to the Ledger GUI App v2.m4v",
        "number": 18,
        "poster_uid": "2016/09/13/12/36/34/032df428-62f6-4927-b796-5dad72b7a613/18-Adding Search to the Ledger GUI App.jpg",
        "release_at": "2016-09-30T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E18-adding-search-to-the-ledger-gui-app"
            }
        ],
        "sample_duration": 123.04,
        "sample_src": "18-Adding Search to the Ledger GUI App Preview v3.m4v",
        "subscription_only": true,
        "synopsis": "We leverage the existing infrastructure of our app to add a search field with very little code.",
        "title": "Adding Search",
        "video_id": "6b1cb0d1-21e8-40e7-aff1-d80cba0fdf31"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [],
        "media_duration": 1037.24,
        "media_src": "22-Command Line Tools with Swift v2.m4v",
        "number": 22,
        "poster_uid": "2016/10/18/12/54/49/46575c4a-1be5-48d3-b36f-cbc8403b7cf3/22-Command Line Tools with Swift.jpg",
        "release_at": "2016-10-28T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E22-command-line-tools-with-swift"
            }
        ],
        "sample_duration": 119.72,
        "sample_src": "22-Command Line Tools with Swift Preview v2.m4v",
        "subscription_only": true,
        "synopsis": "We show how we build simple command line tools leveraging the Cocoa frameworks. We use the Swift Package manager to include dependencies in our project.",
        "title": "Command Line Tools with Swift",
        "video_id": "559391e3-62ea-45cb-aa67-2e51c568c8eb"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "table-views"
        ],
        "media_duration": 1410.48,
        "media_src": "26 Generic Table View Controllers (Part 2).m4v",
        "number": 26,
        "poster_uid": "2016/11/24/07/16/06/b0d3097e-fd93-41a9-9168-113ef047fd90/26 Generic Table View Controllers (Part 2).jpg",
        "release_at": "2016-11-25T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E26-generic-table-view-controllers-part-2"
            }
        ],
        "sample_duration": 107.64,
        "sample_src": "26 Generic Table View Controllers (Part 2) Preview.m4v",
        "subscription_only": true,
        "synopsis": "We build a generic, type-safe table view controller that can handle multiple cell classes.",
        "title": "Generic Table View Controllers (Part 2)",
        "video_id": "151d6fb2-e5e3-4d53-800f-00ea57fd98ef"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 962.56,
        "media_src": "29 Protocols and Class Hierarchies.mp4",
        "number": 29,
        "poster_uid": "2016/12/15/17/25/19/9fac7509-070b-426a-950f-0a4d9c861d99/29 Protocols and Class Hierarchies.jpg",
        "release_at": "2016-12-16T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E29-protocols-class-hierarchies"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We refactor a class hierarchy using a protocol and discuss the differences between both approaches.",
        "title": "Protocols & Class Hierarchies",
        "video_id": "6fa5c702-7bae-4b72-a3d6-fc92e650365c"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "type-safe-api-wrappers"
        ],
        "media_duration": 1082.28,
        "media_src": "28 Typed Notifications (Part 2).mp4",
        "number": 28,
        "poster_uid": "2016/12/05/09/56/15/50084248-b8e4-4c13-b55f-8afb1ff22464/28 Typed Notifications (Part 2).jpg",
        "release_at": "2016-12-09T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E28-typed-notifications-part-2"
            }
        ],
        "sample_duration": 94.12,
        "sample_src": "28 Typed Notifications (Part 2) Preview.mp4",
        "subscription_only": true,
        "synopsis": "We extend our notification wrapper from episode #27 and discuss an alternative protocol-based approach.",
        "title": "Typed Notifications (Part 2)",
        "video_id": "d654507a-b08b-4573-91d9-ad7551c58c69"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "type-safe-api-wrappers"
        ],
        "media_duration": 1072.8,
        "media_src": "27 Typed Notifications.m4v",
        "number": 27,
        "poster_uid": "2016/11/30/14/21/09/38222652-4e0e-49af-af35-4b3f32da882a/27 Typed Notifications.jpg",
        "release_at": "2016-12-02T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E27-typed-notifications-part-1"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "A lightweight generic wrapper around Foundation's notification API lets us avoid boilerplate code and provides a type-safe API.",
        "title": "Typed Notifications (Part 1)",
        "video_id": "da73a1ea-877f-47b1-adf5-7384926d8873"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "functional-programming",
            "ledger-mac-app"
        ],
        "media_duration": 1290.96,
        "media_src": "16-Parser Combinators 2.m4v",
        "number": 16,
        "poster_uid": "2016/09/13/11/20/36/8bbdcf9f-6ca0-4c30-8edf-8910a6850e90/16-Parser Combinators 2.jpg",
        "release_at": "2016-09-16T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E16-building-parser-combinators-part-2"
            }
        ],
        "sample_duration": 96,
        "sample_src": "16-Parser Combinators 2 Preview.m4v",
        "subscription_only": true,
        "synopsis": "We implement some of the more challenging parts of parser combinators.",
        "title": "Building Parser Combinators (Part 2)",
        "video_id": "8f21b6e4-e6ea-419e-b555-edad3c95a4a5"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 914.304,
        "media_src": "31 Mutating Untyped Dictionaries.mp4",
        "number": 31,
        "poster_uid": "2017/01/05/14/16/50/722fdde3-112b-4dc2-b175-71b63facefdc/31 Mutating Untyped Dictionaries.jpg",
        "release_at": "2017-01-06T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E31-mutating-untyped-dictionaries"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Mutating a nested untyped dictionary can be a challenge. To solve it we discuss the mutability of value types and the concept of l-values.",
        "title": "Mutating Untyped Dictionaries",
        "video_id": "b7395493-534f-461e-aaff-eca9d22329c1"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "collection-protocols"
        ],
        "media_duration": 916.8,
        "media_src": "32 Generic Collection Extensions 1.mp4",
        "number": 32,
        "poster_uid": "2017/01/13/10/34/09/c389c7db-8313-4e0c-81c8-c97aba350fd9/32 Generic Collection Extensions 1.jpg",
        "release_at": "2017-01-13T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E32-array-arrayslice-collection-collections-1"
            }
        ],
        "sample_duration": 127.56,
        "sample_src": "32 Generic Collection Extensions 1 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We show how to use the Collection protocol to make an extension available not just on array, but on all collections.",
        "title": "Array, ArraySlice & Collection",
        "video_id": "2fa148ca-1ff2-4631-ab91-7fdb7410d1a5"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "reactive-programming"
        ],
        "media_duration": 1572.28,
        "media_src": "34 Reactive Programming.mp4",
        "number": 34,
        "poster_uid": "2017/01/26/18/45/51/8f30f047-8ffe-42e2-9129-fdf57b18a3b3/34 Reactive Programming.jpg",
        "release_at": "2017-01-27T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E34-reactive-programming"
            }
        ],
        "sample_duration": 92.96,
        "sample_src": "34 Reactive Programming Preview.mp4",
        "subscription_only": true,
        "synopsis": "We take a look at how reactive programming challenges us to think differently.",
        "title": "Reactive Programming",
        "video_id": "1119950f-e176-4cad-bc1e-4506a5a0521c"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "collection-protocols"
        ],
        "media_duration": 848.96,
        "media_src": "38 IndexSet 2.mp4",
        "number": 38,
        "poster_uid": "2017/02/06/19/15/23/185f71f9-8cf0-40d4-8ffd-b8f99998cb1b/35 Building a Custom Collection 2.jpg",
        "release_at": "2017-02-24T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E038-indexset-as-sequence"
            }
        ],
        "sample_duration": 83.64,
        "sample_src": "38 IndexSet 2 Preview.mp4",
        "subscription_only": true,
        "synopsis": "Conforming to the Sequence protocol allows us to efficiently iterate over the elements, and we gain all of its useful functionality.",
        "title": "Conforming IndexSet to Sequence",
        "video_id": "62288d60-9d75-48cc-be35-c2e4bc298dec"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "reactive-programming"
        ],
        "media_duration": 988.84,
        "media_src": "40 Signal Ownership and Subscriptions.mp4",
        "number": 40,
        "poster_uid": "2017/02/27/08/36/08/616068e6-2701-4eb5-8f29-3a07443d4e53/40 Signal Ownership and Subscriptions.jpg",
        "release_at": "2017-03-10T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E40-signal-ownership-and-subscriptions-reactive-programming-4"
            }
        ],
        "sample_duration": 103.48,
        "sample_src": "40 Signal Ownership and Subscriptions Preview.mp4",
        "subscription_only": true,
        "synopsis": "We add the ability to map over signals and control subscriptions in a more fine-grained manner. Along the way, we improve the signal ownership model and implement the concept of disposables.",
        "title": "Signal Ownership and Subscriptions",
        "video_id": "8f244bbf-4e0c-4cba-b1be-efd4a2025e5f"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "reactive-programming"
        ],
        "media_duration": 1425.96,
        "media_src": "39 From Futures to Signals v2.mp4",
        "number": 39,
        "poster_uid": "2017/02/20/12/18/05/175408a4-80c7-4872-a490-069dc165374c/39 From Futures to Signals.jpg",
        "release_at": "2017-03-03T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E39-from-futures-to-signals-reactive-programming-3"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We extend the Future type of a previous episode to a simple reactive library. Along the way, we dive into debugging a reference cycle in our implementation.",
        "title": "From Futures to Signals",
        "video_id": "5481be64-12b8-440c-81ac-09c3456be204"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "reactive-programming"
        ],
        "media_duration": 1050.304,
        "media_src": "36 Futures.mp4",
        "number": 36,
        "poster_uid": "2017/02/06/09/02/23/46f1ec5f-198e-4f26-9515-202c73040fcb/36 Futures.jpg",
        "release_at": "2017-02-10T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E36-futures"
            }
        ],
        "sample_duration": 122.96,
        "sample_src": "36 Futures Preview.mp4",
        "subscription_only": true,
        "synopsis": "We implement a Futures type that we can use instead of callbacks as a first step towards a reactive library.",
        "title": "Futures",
        "video_id": "81726b21-23ef-43bb-b03f-e6b17d2e0e92"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "server-side-swift"
        ],
        "media_duration": 1473.24,
        "media_src": "44 Setting Up a Swift Server Side Project.mp4",
        "number": 44,
        "poster_uid": "2017/03/23/07/48/52/02338038-e019-4d34-8e18-524aad7bb1e0/44 Setting Up a Swift Server Side Project.jpg",
        "release_at": "2017-04-07T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E44-setting-up-a-swift-server-side-project"
            }
        ],
        "sample_duration": 103.56,
        "sample_src": "44 Setting Up a Swift Server Side Project Preview.mp4",
        "subscription_only": true,
        "synopsis": "We set up our development environment using the Swift package manager and Docker.",
        "title": "Setting Up a Server-Side Swift Project",
        "video_id": "0921c2fa-4230-482c-8311-10f26bbff602"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "collection-protocols"
        ],
        "media_duration": 1132,
        "media_src": "37 IndexSet 1.mp4",
        "number": 37,
        "poster_uid": "2017/02/06/19/13/31/e9d8bc99-c792-4af0-8b4c-3e42c8fd2e6e/34 Building a Custom Collection 1.jpg",
        "release_at": "2017-02-17T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project & Tests",
                "url": "https://github.com/objcio/S01E37-custom-collections-building-indexset"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We build the basics for a custom index set collection type.",
        "title": "Building a Custom IndexSet Collection",
        "video_id": "1fc8d8a0-6fa8-4516-9ac4-929570f4ce9f"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "reactive-programming"
        ],
        "media_duration": 1416.08,
        "media_src": "42 Thread Safety v2.mp4",
        "number": 42,
        "poster_uid": "2017/03/21/08/36/36/3a67c67d-b23a-4ff0-81b3-6b05522df155/42 Thread Safety.jpg",
        "release_at": "2017-03-24T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E42-thread-safety-reactive-programming-5"
            }
        ],
        "sample_duration": 114.08,
        "sample_src": "42 Thread Safety Preview.mp4",
        "subscription_only": true,
        "synopsis": "We make our Signal implementation thread-safe by safeguarding the access to shared resources.",
        "title": "Thread Safety",
        "video_id": "fceea7c2-d4e6-4413-8039-3d30aba71895"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "collection-protocols"
        ],
        "media_duration": 1002.453333,
        "media_src": "35 Sorted Arrays.mp4",
        "number": 35,
        "poster_uid": "2017/01/26/19/49/58/410ef4ee-697c-4b28-9901-9b7a3ff70657/35 Sorted Arrays.jpg",
        "release_at": "2017-02-03T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E35-sorted-arrays"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We build a sorted array type on top of Swift's native array and make it conform to the Collection protocol.",
        "title": "Sorted Arrays",
        "video_id": "5a2d5695-95b0-42e6-ba58-1d16eda4cbbe"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "collection-protocols"
        ],
        "media_duration": 1011.8,
        "media_src": "IndexSet 3.mp4",
        "number": 41,
        "poster_uid": "2017/02/28/08/11/14/a0cf9f10-dfd5-4935-9872-7a83b7f18f59/IndexSet 3.jpg",
        "release_at": "2017-03-17T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E41-custom-collections-indexset-as-collection-collections-6/"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "To conform IndexSet to the Collection protocol we implement a custom index type along the way.",
        "title": "Conforming IndexSet to Collection",
        "video_id": "2ee2fab5-767e-4c62-a416-39e6893ac25a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1165.28,
        "media_src": "86 MVC (Part 1)-corrected.mp4",
        "number": 86,
        "poster_uid": "2018/02/25/09/45/16/76522d2b-6ae9-4f99-acfc-e43866d05f2d/86 MVC (Part 1)-new.jpg",
        "release_at": "2018-02-02T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E86-sharing-state-between-view-controllers-in-mvc-part-1"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We add a mini player to the MVC variant of the sample app found in our App Architecture book. We adjust our storyboard and discuss how to adapt the architecture.",
        "title": "Sharing State between View Controllers in MVC (Part 1)",
        "video_id": "96c3d20e-de19-4998-9c32-724b39e44f56"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-layout-library"
        ],
        "media_duration": 1428.6,
        "media_src": "122 Responsive Layout 5.mp4",
        "number": 122,
        "poster_uid": "2018/10/05/06/13/42/10f61dd7-e5eb-4467-8929-316f9230732e/122 Responsive Layout 5.jpg",
        "release_at": "2018-10-12T14:00:00",
        "released": false,
        "resources": [
            {
                "subtitle": "Written in Swift 4.2",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E122-nested-layouts"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": true,
        "synopsis": "We build a feature that allows us to create more complex layouts by nesting layouts within each other.",
        "title": "Nested Layouts",
        "video_id": "47ecc156-4b73-4fe4-9a99-4034731473b9"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye"
        ],
        "collections": [
            "collection-protocols"
        ],
        "media_duration": 1014,
        "media_src": "33 Generic Collection Extensions 2.mp4",
        "number": 33,
        "poster_uid": "2017/01/13/12/05/08/738e961f-64c4-4892-b7ca-6796027d251e/33 Generic Collection Extensions 2.jpg",
        "release_at": "2017-01-20T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E33-sequence-iterator-collections-2"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We make our collection extension even more generic by implementing it on the Sequence protocol.",
        "title": "Sequence & Iterator",
        "video_id": "69e69606-d652-4a88-af05-5b9e5383687b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1131.818667,
        "media_src": "20-Understanding Value Type Performance v2.m4v",
        "number": 20,
        "poster_uid": "2016/10/12/11/56/52/8ba1024d-3e85-42e3-a467-fa0e7a84a71f/20-Understanding Value Type Performance.jpg",
        "release_at": "2016-10-14T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E20-understanding-value-type-performance"
            }
        ],
        "sample_duration": 94.165333,
        "sample_src": "20-Understanding Value Type Performance Preview.m4v",
        "subscription_only": true,
        "synopsis": "We use copy-on-write to write an efficient struct wrapper around NSMutableData and discuss how the standard library uses the same approach.",
        "title": "Understanding Value Type Performance",
        "video_id": "eea5b074-f230-4288-a00b-cac8ecd898f4"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "server-side-swift"
        ],
        "media_duration": 1730.48,
        "media_src": "48 Postgres 1.mp4",
        "number": 48,
        "poster_uid": "2017/04/28/11/20/46/ac5b7312-b6d2-47ce-82b5-b286bd9b5d20/48 Postgres 1.jpg",
        "release_at": "2017-05-05T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E48-server-side-swift-interfacing-with-postgresql"
            }
        ],
        "sample_duration": 182.92,
        "sample_src": "48 Postgres 1 (Preview).mp4",
        "subscription_only": true,
        "synopsis": "We implement a lightweight wrapper around the libpq C library.",
        "title": "Interfacing with PostgreSQL",
        "video_id": "90332be5-67ca-4cc8-8cfe-75cc13679450"
    },
    {
        "collaborators": [
            "brandon-williams",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "ios-at-kickstarter"
        ],
        "media_duration": 1631.8,
        "media_src": "49 Deeplinking at Kickstarter.mp4",
        "number": 49,
        "poster_uid": "2017/04/28/07/06/28/e9a51968-a2a5-4c54-9361-8304b29b084a/49 Deeplinking at Kickstarter.jpg",
        "release_at": "2017-05-12T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E49-deeplinking-at-kickstarter"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Brandon from Kickstarter shows their approach of unifying all potential entry points into an iOS app using a common route enum, both in a simple demo implementaion and in their open source code base.",
        "title": "Deep Linking",
        "video_id": "be77e730-777a-4c1e-b2d4-b163ccd7e07a"
    },
    {
        "collaborators": [
            "brandon-williams",
            "chris",
            "juul",
            "natalye"
        ],
        "collections": [
            "ios-at-kickstarter"
        ],
        "media_duration": 2038.32,
        "media_src": "47 View Models at Kickstarter 2.mp4",
        "number": 47,
        "poster_uid": "2017/04/28/07/36/50/986f247e-e58a-4143-983f-8d1d4b04d4fa/47 View Models at Kickstarter.jpg",
        "release_at": "2017-04-28T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/s01e47-testable-view-models-at-kickstarter"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Brandon from Kickstarter shows us how they write highly testable code with view models. We integrate Apple Pay payments and look at their open-source codebase.",
        "title": "View Models",
        "video_id": "480bc61f-3920-4282-b6ec-e0ab77b71cef"
    },
    {
        "collaborators": [
            "karoly",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "functional-programming",
            "data-structures"
        ],
        "media_duration": 1620.4,
        "media_src": "56 Binary Search Trees.mp4",
        "number": 56,
        "poster_uid": "2017/06/15/14/50/32/fc6720a0-b124-4e2c-bcdf-61defe3a8217/56 Binary Search Trees.jpg",
        "release_at": "2017-06-30T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E56-binary-search-trees"
            }
        ],
        "sample_duration": 103.92,
        "sample_src": "56 Binary Search Trees Preview.mp4",
        "subscription_only": true,
        "synopsis": "We look at binary search trees as an alternative to last episode's sorted array implementation. We benchmark the performance of insertion and lookup in both data structures, with some surprising results.",
        "title": "Binary Search Trees",
        "video_id": "9c31b240-0eee-4f51-b80f-1280f4f23cb7"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 709.4,
        "media_src": "52 Deleting Code with Swift 4 v2.mp4",
        "number": 52,
        "poster_uid": "2017/05/30/15/31/11/fb9159a9-3371-4437-a28b-20d9761dbb36/52 Deleting Code with Swift 4.jpg",
        "release_at": "2017-06-02T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E52-deleting-code-with-swift-4"
            }
        ],
        "sample_duration": 100.92,
        "sample_src": "52 Deleting Code with Swift 4 (Preview).mp4",
        "subscription_only": true,
        "synopsis": "Swift 4's new features lets us delete code we've written in previous episodes.",
        "title": "Deleting Code with Swift 4",
        "video_id": "4adf6832-7dfa-4b3a-a643-e29f6d7be121"
    },
    {
        "collaborators": [
            "rob-napier",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [],
        "media_duration": 1471.36,
        "media_src": "57 Certificate Pinning.mp4",
        "number": 57,
        "poster_uid": "2017/06/20/06/08/16/fafc405a-5088-43ad-b3c4-53f473ea2239/Certificate Pinning.jpg",
        "release_at": "2017-07-07T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E57-certificate-pinning"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Today we're joined by Rob Napier, who explains why and how to add certificate pinning to your app.",
        "title": "Certificate Pinning",
        "video_id": "f0b2cd26-c054-40b7-9845-9d85e374832b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "server-side-swift"
        ],
        "media_duration": 1367.72,
        "media_src": "45 Routing.mp4",
        "number": 45,
        "poster_uid": "2017/04/07/15/04/26/8baf88c4-d6ab-45f1-a1eb-cd65ec720bf3/45 Routing 3.jpg",
        "release_at": "2017-04-14T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E45-server-side-swift-routing"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We implement a type safe and Swift-like routing infrastructure that's pretty different from the common approach of most web frameworks.",
        "title": "Routing",
        "video_id": "709c433c-f77a-4dcf-ab76-4df562400137"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 959.36,
        "media_src": "46 Combined Class and Protocol Requirements.mp4",
        "number": 46,
        "poster_uid": "2017/04/11/08/11/13/14d521e7-75da-4f86-a572-ee04cbd5a852/46 Combined Class and Protocol Requirements.jpg",
        "release_at": "2017-04-21T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E46-combined-class-and-protocol-requirements"
            }
        ],
        "sample_duration": 121.6,
        "sample_src": "46 Combined Class and Protocol Requirements Preview.mp4",
        "subscription_only": true,
        "synopsis": "We look at multiple ways to create variables that have a class type but also conform to a protocol.",
        "title": "Combined Class and Protocol Requirements",
        "video_id": "d6f9abfd-5343-456d-82fb-0abcb7a76150"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1012.12,
        "media_src": "43 View Controller Refactoring.mp4",
        "number": 43,
        "poster_uid": "2017/03/21/10/39/30/ddf20551-e6a3-4b5d-bf10-a8f48767fd9d/43 View Controller Refactoring.jpg",
        "release_at": "2017-03-31T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E43-view-controller-refactoring"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Instead of letting multiple view controllers manage the navigation bar's state individually, we pull this code out and unify the logic in one place.",
        "title": "View Controller Refactoring",
        "video_id": "ff7f0b94-e0d1-4cb0-bdb0-24e86b231951"
    },
    {
        "collaborators": [
            "lisa-luo",
            "chris",
            "juul",
            "natalye"
        ],
        "collections": [
            "reactive-programming",
            "ios-at-kickstarter"
        ],
        "media_duration": 2327.32,
        "media_src": "53 Test-Driven Reactive Programming at Kickstarter.mp4",
        "number": 53,
        "poster_uid": "2017/05/19/19/20/32/0419310f-a111-46fb-b593-349f70502379/53 Test-Driven Reactive Programming at Kickstarter.jpg",
        "release_at": "2017-06-09T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E53-test-driven-reactive-programming-at-kickstarer"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Lisa from Kickstarter shows us their test-driven development process to reactive programming.",
        "title": "Test-Driven Reactive Programming",
        "video_id": "faf60c3a-1787-4cfa-99de-fff2c958501b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "server-side-swift"
        ],
        "media_duration": 1514.88,
        "media_src": "50 Postgres 2.mp4",
        "number": 50,
        "poster_uid": "2017/04/30/12/38/53/a6b19860-14d7-4fad-b337-b5ad9e12c535/50 Postgres 2.jpg",
        "release_at": "2017-05-19T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E50-server-side-swift-interfacing-with-postgresql-part-2"
            }
        ],
        "sample_duration": 111.52,
        "sample_src": "50 Postgres 2 (Preview).mp4",
        "subscription_only": true,
        "synopsis": "We extend our libpq wrapper to handle queries with properly escaped parameters. To achieve this, we have to dive deep into Swift's unsafe pointer APIs.",
        "title": "Interfacing with PostgreSQL (Part 2)",
        "video_id": "4f1787fe-aeba-4fc6-8bd4-b9c5ebc87adf"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 987.76,
        "media_src": "54 UI Elements with Callbacks.mp4",
        "number": 54,
        "poster_uid": "2017/06/05/10/09/49/3b0f322f-aaa4-4a01-a63f-9b4fed7cb4f7/54 UI Elements with Callbacks.jpg",
        "release_at": "2017-06-16T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E54-ui-elements-with-callbacks"
            }
        ],
        "sample_duration": 120.68,
        "sample_src": "54 UI Elements with Callbacks Preview.mp4",
        "subscription_only": true,
        "synopsis": "We write a dedicated target-action to make it easier to augment existing UI controls with callbacks.",
        "title": "UI Elements with Callbacks",
        "video_id": "6b3acf0a-2a12-43f5-bcb7-88ccd4dbd352"
    },
    {
        "collaborators": [
            "brandon-williams",
            "chris",
            "juul",
            "natalye"
        ],
        "collections": [
            "ios-at-kickstarter"
        ],
        "media_duration": 1283.88,
        "media_src": "51 Playground-Driven Development at Kickstarter.mp4",
        "number": 51,
        "poster_uid": "2017/05/19/19/11/50/dc19b0e9-09ca-4898-b22d-775e8f7bd63e/51 Playground-Driven Development at Kickstarter.jpg",
        "release_at": "2017-05-26T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E51-playground-driven-development-at-kickstarter"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Brandon from Kickstarter demos how the company uses playgrounds to prototype and style individual view controllers.",
        "title": "Playground-Driven Development",
        "video_id": "1e7e2723-36dc-4a11-b81f-02703b7bb305"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "experiments"
        ],
        "media_duration": 1379.64,
        "media_src": "63 Mutable Shared Structs (Part 2).mp4",
        "number": 63,
        "poster_uid": "2017/07/21/11/55/32/284f5e77-283e-4b02-a1a1-95568bea081b/63 Mutable Shared Structs (Part 2).jpg",
        "release_at": "2017-08-18T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E63-mutable-shared-structs-part-2"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We refine the observation capabilities of our new data type.",
        "title": "Mutable Shared Structs (Part 2)",
        "video_id": "8e847019-cbd2-4c80-a96c-1e15c20b64bd"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "table-views"
        ],
        "media_duration": 1824.48,
        "media_src": "64 Driving Table View Animations.mp4",
        "number": 64,
        "poster_uid": "2017/07/21/14/48/56/61a13216-3d66-46fe-a5b9-c7818d00d1e1/64 Driving Table View Animations.jpg",
        "release_at": "2017-08-25T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E64-driving-table-view-animations"
            }
        ],
        "sample_duration": 134.36,
        "sample_src": "64 Driving Table View Animations Preview.mp4",
        "subscription_only": true,
        "synopsis": "We build a component similar to NSFetchedResultsController to decouple our view data and to drive table view animations.",
        "title": "Driving Table View Animations",
        "video_id": "12c6f35b-fb19-47ed-a914-7b1bc7c87519"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "experiments"
        ],
        "media_duration": 1810,
        "media_src": "61 Mutable Shared Structs (Part 1).mp4",
        "number": 61,
        "poster_uid": "2017/07/20/10/20/02/d5667872-99b4-4455-9aa6-9d456ad8d435/61 Mutable Shared Structs (Part 1).jpg",
        "release_at": "2017-08-04T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E61-mutable-shared-structs-part-1"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We recap the tradeoffs between classes and structs and start implementation of our new type, leveraging Swift 4's keypaths.",
        "title": "Mutable Shared Structs (Part 1)",
        "video_id": "2289de0f-d4b5-4771-868a-f1875627c597"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "data-structures"
        ],
        "media_duration": 1678.12,
        "media_src": "65 Playground Quicklook for Binary Trees.mp4",
        "number": 65,
        "poster_uid": "2017/08/31/09/01/40/b468ca2b-a68c-4c66-87c7-44635fde45d1/65 Playground Quicklook for Binary Trees.jpg",
        "release_at": "2017-09-01T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E65-playground-quicklook-for-binary-trees"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We create a custom Quick Look extension to visualize binary tree structures in playgrounds.",
        "title": "Playground QuickLook for Binary Trees",
        "video_id": "396af908-2c43-4285-b87b-cb9ee2e639b0"
    },
    {
        "collaborators": [
            "brandon-kase",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1454.08,
        "media_src": "71 Type-Safe File Paths with Phantom Types.mp4",
        "number": 71,
        "poster_uid": "2017/10/05/09/14/27/6567dfd0-75b1-4aa5-9394-302f2dcba6e2/71 Type-Safe File Paths with Phantom Types.jpg",
        "release_at": "2017-10-13T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E71-type-safe-file-paths-with-phantom-types"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Brandon Kase joins us to show how Swift's type system can be leveraged to check file paths at compile time.",
        "title": "Type-Safe File Paths with Phantom Types",
        "video_id": "5f071813-65b2-414b-af85-a9c0f2463728"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "tooling"
        ],
        "media_duration": 864.72,
        "media_src": "60 Xcode 9 Productivity Tips.mp4",
        "number": 60,
        "poster_uid": "2017/07/20/06/46/13/5c023a78-15ba-4f0b-9f48-2c1d0d073e28/60 Xcode 9 Productivity Tips.jpg",
        "release_at": "2017-07-28T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": 103.84,
        "sample_src": "60 Xcode 9 Productivity Tips Preview.mp4",
        "subscription_only": true,
        "synopsis": "We show some of our favorite new productivity features in Xcode 9.",
        "title": "Xcode 9 Productivity Tips",
        "video_id": "d64e2db6-45fb-4a5f-80b9-0a098b6e16a2"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "experiments",
            "reactive-programming"
        ],
        "media_duration": 1558.12,
        "media_src": "67 Reactive Data Structures-Linked Lists.mp4",
        "number": 67,
        "poster_uid": "2017/09/07/12/12/17/97cdd607-6a16-48e0-8d3c-66d568be549b/67 Reactive Data Structures-Linked Lists.jpg",
        "release_at": "2017-09-15T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E67-reactive-data-structures-linked-lists"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We build a reactive linked list on top of reactive programming primitives. We implement a reduce method on this type, which does the minimum amount of work when the underlying data changes.",
        "title": "Reactive Data Structures: Linked Lists",
        "video_id": "f6600101-b113-4856-8eec-cfda4c05540a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-layout-library"
        ],
        "media_duration": 936.8,
        "media_src": "121 Responsive Layout 4.mp4",
        "number": 121,
        "poster_uid": "2018/09/27/09/17/32/460c79ea-6fba-4b1e-b13c-6228e306bf51/121 Responsive Layout 4.jpg",
        "release_at": "2018-10-05T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E121-flexible-spaces"
            }
        ],
        "sample_duration": 18,
        "sample_src": "121 Responsive Layout 4 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We add flexible spaces to our layout library and show how elements can be shown or hidden depending on the available space.",
        "title": "Flexible Spaces",
        "video_id": "98b78117-f6b8-44e7-87c2-4acd6fab14e0"
    },
    {
        "collaborators": [
            "karoly",
            "chris",
            "juul",
            "natalye"
        ],
        "collections": [
            "data-structures"
        ],
        "media_duration": 1611.08,
        "media_src": "55 Sorted Arrays with Binary Search.mp4",
        "number": 55,
        "poster_uid": "2017/06/15/06/20/05/b04ed4ce-4af5-4074-912f-ce6bcc2953f2/Sorted Arrays Binary Search.jpg",
        "release_at": "2017-06-23T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E55-sorted-arrays-with-binary-search"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Together with K\u00e1roly, we improve our sorted array implementation using binary search. We benchmark both implementations to learn about their real-world performance.",
        "title": "Sorted Arrays with Binary Search",
        "video_id": "e31ef6a0-a9c6-4601-bc70-55a43e70becc"
    },
    {
        "collaborators": [
            "karoly",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "functional-programming",
            "data-structures"
        ],
        "media_duration": 1911.28,
        "media_src": "58 Red Black Trees v2.mp4",
        "number": 58,
        "poster_uid": "2017/06/19/10/40/34/d405e17b-8246-4e78-8087-27ac298d9d35/58 Red Black Trees.jpg",
        "release_at": "2017-07-14T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 3.1",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E58-red-black-trees"
            }
        ],
        "sample_duration": 157,
        "sample_src": "58 Red Black Trees Preview.mp4",
        "subscription_only": true,
        "synopsis": "Building on the binary search tree code from episode #56, we implement red-black trees as self-balancing tree data structures and benchmark their performance.",
        "title": "Red-Black Trees",
        "video_id": "bcd64b56-e053-4c54-a84a-0151f8601480"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "tooling"
        ],
        "media_duration": 754.76,
        "media_src": "59 Refactoring with Xcode 9.mp4",
        "number": 59,
        "poster_uid": "2017/07/18/17/24/17/d915a034-6302-4663-8c31-468254f8d567/59 Refactoring with Xcode 9.jpg",
        "release_at": "2017-07-21T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We take a look at features like renaming, extracting expressions, extracting methods, and more.",
        "title": "Refactoring with Xcode 9",
        "video_id": "45473d0a-8bf2-4353-8dff-cd2238fea4e8"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "experiments",
            "reactive-programming"
        ],
        "media_duration": 1855.28,
        "media_src": "69 Reactive Data Structures-Arrays.mp4",
        "number": 69,
        "poster_uid": "2017/09/07/15/52/06/38fd8bfc-2ed8-4858-bf02-0224b17853ee/69 Reactive Data Structures-Arrays.jpg",
        "release_at": "2017-09-29T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E69-reactive-data-structures-array"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We build a reactive array type on top of the reactive list from episode #67 and implement a filter method.",
        "title": "Reactive Data Structures: Arrays",
        "video_id": "e4b545a9-aaa7-442e-aee8-56825fceddb6"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture",
            "experiments"
        ],
        "media_duration": 1269.96,
        "media_src": "74 View Bindings in Pure Swift (Part 2).mp4",
        "number": 74,
        "poster_uid": "2017/10/19/08/57/51/c2abf006-5ff5-4694-9a10-048b5ca28bae/74 View Bindings in Pure Swift (Part 2).jpg",
        "release_at": "2017-11-03T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E74-view-bindings-in-pure-swift-part-2"
            }
        ],
        "sample_duration": 89.76,
        "sample_src": "74 View Bindings in Pure Swift (Part 2) Preview.mp4",
        "subscription_only": true,
        "synopsis": "We continue to expand our experimental view binding mechanism to implement dark mode in our app.",
        "title": "View Bindings in Pure Swift (Part 2)",
        "video_id": "acc39a40-3d0a-44a0-9e7d-30d0c0dbc5b5"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture",
            "experiments"
        ],
        "media_duration": 1332.4,
        "media_src": "73 View Bindings in Pure Swift.mp4",
        "number": 73,
        "poster_uid": "2017/10/19/07/54/49/751d55f7-67a3-4703-8308-d1c99e964a33/73 View Bindings in Pure Swift.jpg",
        "release_at": "2017-10-27T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E73-view-bindings-in-pure-swift"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We experiment with reactive view bindings that don't rely on runtime programming.",
        "title": "View Bindings in Pure Swift",
        "video_id": "5769d989-97a5-43a7-b363-a977ec2ee2de"
    },
    {
        "collaborators": [
            "brandon-kase",
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "functional-programming",
            "libraries"
        ],
        "media_duration": 1344.52,
        "media_src": "88 The Expression Problem (Part 1)-corrected.mp4",
        "number": 88,
        "poster_uid": "2018/02/25/09/46/08/9bf71b42-6ae5-4127-99fb-e987d45715e9/88 The Expression Problem (Part 1)-new.jpg",
        "release_at": "2018-02-16T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E88-extensible-libraries-1-enums-vs-classes"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We discuss the capabilities and limitations of enums and classes when designing extensible libraries.",
        "title": "Extensible Libraries 1: Enums vs Classes",
        "video_id": "83106f84-e837-4656-bdad-2be9d8d0b340"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1449.44,
        "media_src": "87 MVC (Part 2)-corrected.mp4",
        "number": 87,
        "poster_uid": "2018/02/25/09/45/31/6d5c1017-fd45-47ba-9b7f-c998e0f437f9/87 MVC (Part 2)-new.jpg",
        "release_at": "2018-02-09T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E87-sharing-state-between-view-controllers-in-mvc-part-2"
            }
        ],
        "sample_duration": 58.92,
        "sample_src": "87 MVC (Part 2) Preview-corrected.mp4",
        "subscription_only": true,
        "synopsis": "We continue implementing a mini player in the MVC variant of the sample app found in our App Architecture book.",
        "title": "Sharing State between View Controllers in MVC (Part 2)",
        "video_id": "a1ee9ef7-db7f-4c92-8baa-5c9d70c3798f"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "table-views",
            "reactive-programming"
        ],
        "media_duration": 926.76,
        "media_src": "70 Table View Animations with Reactive Arrays.mp4",
        "number": 70,
        "poster_uid": "2017/10/03/12/04/18/8da43716-3226-4ad8-a8cf-727ad5063c2e/70 Table View Animations with Reactive Arrays.jpg",
        "release_at": "2017-10-06T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E70-table-view-animations-with-reactive-arrays"
            }
        ],
        "sample_duration": 124.72,
        "sample_src": "70 Table View Animations with Reactive Arrays Preview.mp4",
        "subscription_only": true,
        "synopsis": "We use the reactive array type from episodes #67 and #69 to back a table view. This allows us to correctly animate changes in the underlying data, even with filter and sort transformations applied.",
        "title": "Table View Animations with Reactive Arrays",
        "video_id": "c898d586-76d4-40f2-afd9-8b4e53379c8f"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "reactive-programming",
            "incremental-programming"
        ],
        "media_duration": 2147.84,
        "media_src": "81 Reference Cycles and Ownership-corrected.mp4",
        "number": 81,
        "poster_uid": "2018/02/25/09/41/25/fac8d3f3-9968-40a3-9893-ff466e3723d8/81 Reference Cycles and Ownership-new.jpg",
        "release_at": "2017-12-22T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E81-reference-cycles-and-ownership"
            }
        ],
        "sample_duration": 137.84,
        "sample_src": "81 Reference Cycles and Ownership Preview-corrected.mp4",
        "subscription_only": true,
        "synopsis": "We use Xcode's memory debugger to resolve all the reference cycles in our glitch-free reactive code and introduce a proper ownership model.",
        "title": "Reference Cycles and Ownership",
        "video_id": "b4595b30-be06-47b0-ad9e-acf47658b3ca"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "functional-programming"
        ],
        "media_duration": 1120.96,
        "media_src": "82 Refactoring Imperative Layout Code-corrected.mp4",
        "number": 82,
        "poster_uid": "2018/02/25/09/41/47/f76cb6cb-ff1f-4fb7-b00c-8bc12f0801f0/82 Refactoring Imperative Layout Code-new.jpg",
        "release_at": "2018-01-05T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E82-refactoring-imperative-layout-code"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We refactor a simple flow layout to have a functional interface, disentangling the layout code from UIKit code.",
        "title": "Refactoring Imperative Layout Code",
        "video_id": "e843d40d-7277-48c8-8787-f0bf110b699e"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "reactive-programming",
            "incremental-programming"
        ],
        "media_duration": 1096,
        "media_src": "76 Understanding Reactive Glitches-corrected.mp4",
        "number": 76,
        "poster_uid": "2018/02/25/09/34/49/a74b9ac5-a376-40ab-afd7-b391b407d039/76 Understanding Reactive Glitches-new.jpg",
        "release_at": "2017-11-17T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": 91.96,
        "sample_src": "76 Understanding Reactive Glitches Preview-corrected.mp4",
        "subscription_only": false,
        "synopsis": "We look at an example of a reactive pipeline with surprising behavior, discuss why it occurs, and how it could be improved.",
        "title": "Understanding Reactive Glitches",
        "video_id": "65b22e22-6867-4e2f-8902-4093105c0e80"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 802.44,
        "media_src": "80 String vs NSString-corrected.mp4",
        "number": 80,
        "poster_uid": "2018/02/25/09/40/40/2a9b8434-8db7-4542-a9a5-d8b75f08024f/80 String vs NSString-new.jpg",
        "release_at": "2017-12-15T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E80-swift-string-vs-nsstring"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We look at how to work with ranges in a mixed Swift String/NSString environment.",
        "title": "Swift String vs. NSString",
        "video_id": "62dc34d8-752a-4eda-829b-90e03d0dbac4"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1508.16,
        "media_src": "79 String Parsing Performance-corrected.mp4",
        "number": 79,
        "poster_uid": "2018/02/25/09/36/06/5e1732d6-c631-444d-a28d-7a2e8a48cc5a/79 String Parsing Performance-new.jpg",
        "release_at": "2017-12-08T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E79-string-parsing-performance"
            }
        ],
        "sample_duration": 78.28,
        "sample_src": "79 String Parsing Performance Preview-corrected.mp4",
        "subscription_only": true,
        "synopsis": "We benchmark the CSV parsing code from the previous episode and refactor it to become an order of magnitude faster.",
        "title": "String Parsing Performance",
        "video_id": "8b0694fa-beb0-4df8-bbff-50ea70ce5a4f"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "rick-minnich",
            "natalye"
        ],
        "collections": [
            "functional-programming"
        ],
        "media_duration": 1113.8,
        "media_src": "Rendering CommonMark Part 2.m4v",
        "number": 4,
        "poster_uid": "2016/06/30/13/33/21/9e977e9f-72e8-4b29-a2ef-bd139009059e/poster.jpg",
        "release_at": "2016-07-01T13:30:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 2.2",
                "title": "Playground",
                "url": "https://github.com/objcio/S01E04-rendering-commonmark-part-2"
            }
        ],
        "sample_duration": 137.72,
        "sample_src": "Rendering CommonMark Part 2 Preview.m4v",
        "subscription_only": true,
        "synopsis": "We add customizable styles to our CommonMark renderer from episode #2.",
        "title": "Rendering CommonMark (Part 2)",
        "video_id": "50d64716-7809-407f-87dd-ca6fd8bcfa5a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "reactive-programming",
            "incremental-programming"
        ],
        "media_duration": 1495.52,
        "media_src": "77 A Technique to Avoid Reactive Glitches-corrected2.mp4",
        "number": 77,
        "poster_uid": "2018/02/25/10/19/57/8fda841b-9f7a-4248-a4f7-c7e380af4a28/77 A Technique to Avoid Reactive Glitches-new.jpg",
        "release_at": "2017-11-24T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E77-a-technique-to-avoid-reactive-glitches"
            }
        ],
        "sample_duration": 101.32,
        "sample_src": "77 A Technique to Avoid Reactive Glitches Preview-corrected2.mp4",
        "subscription_only": true,
        "synopsis": "We refactor the simple reactive library from the last episode using topological sorting to avoid any temporarily wrong values.",
        "title": "A Technique to Avoid Reactive Glitches",
        "video_id": "9bca87df-10bd-4cae-aeac-8de6f4128351"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1708.52,
        "media_src": "78 Swift Strings and Substrings-corrected.mp4",
        "number": 78,
        "poster_uid": "2018/02/25/09/36/00/f786e77c-96fe-46f6-b0bc-11fbc27d9452/78 Swift Strings and Substrings-new.jpg",
        "release_at": "2017-12-01T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E78-swift-strings-and-substrings"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We write a simple CSV parser as an example demonstrating how to work with Swift's String and Substring types.",
        "title": "Swift Strings and Substrings",
        "video_id": "c6a2b3d9-8352-4641-bc4a-95eb73533526"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "functional-programming",
            "type-safe-api-wrappers",
            "libraries"
        ],
        "media_duration": 1363.96,
        "media_src": "83 Wrapping Analytics APIs-corrected.mp4",
        "number": 83,
        "poster_uid": "2018/02/25/09/42/06/72a83e19-c083-4ec2-92ec-e56a40a4fc32/83 Wrapping Analytics APIs-new.jpg",
        "release_at": "2018-01-12T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": 63.84,
        "sample_src": "83 Wrapping Analytics APIs Preview-corrected.mp4",
        "subscription_only": true,
        "synopsis": "We look at different techniques for wrapping analytics APIs in Swift and discuss their advantages and disadvantages.",
        "title": "Wrapping Analytics APIs",
        "video_id": "dab44b4c-2002-4c5b-be22-37e9673d6104"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1045.24,
        "media_src": "75 Auto Layout with Key Paths.mp4",
        "number": 75,
        "poster_uid": "2017/10/19/09/58/53/80a3f7f1-5507-406b-af6b-a592abd9a05b/75 Auto Layout with Key Paths.jpg",
        "release_at": "2017-11-10T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E75-auto-layout-with-key-paths"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We clean up our layout code by introducing helper functions that leverage Swift's key paths.",
        "title": "Auto Layout with Key Paths",
        "video_id": "8aa19eff-1703-4377-866b-64660a04c6ee"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "functional-programming",
            "libraries"
        ],
        "media_duration": 1424.24,
        "media_src": "91 Syntax Highlighting v3.mp4",
        "number": 91,
        "poster_uid": "2018/03/09/06/47/48/91e434f9-b88f-4f89-b5a2-0145744a277e/91 Syntax Highlighting.jpg",
        "release_at": "2018-03-09T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E91-rendering-markdown-with-syntax-highlighting"
            }
        ],
        "sample_duration": 41.84,
        "sample_src": "91 Syntax Highlighting Preview.mp4",
        "subscription_only": true,
        "synopsis": "We extend a basic Markdown library using protocol composition to add support for syntax highlighting in Swift code blocks.",
        "title": "Rendering Markdown with Syntax Highlighting",
        "video_id": "10d43ce3-c7c8-4464-8086-7315086d07b2"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1312.4,
        "media_src": "95 Forms 2 v2.mp4",
        "number": 95,
        "poster_uid": "2018/03/28/07/39/39/e687ae42-ca67-432f-9d69-45f0da38dbb9/95 Forms 2.jpg",
        "release_at": "2018-04-06T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E95-building-a-form-library-simplifying-indexpath-logic"
            }
        ],
        "sample_duration": 46.24,
        "sample_src": "Forms 2 Preview.mp4",
        "subscription_only": false,
        "synopsis": "We begin to refactor the imperative table view code from the last episode, working toward a more declarative approach of defining our form.",
        "title": "Simplifying IndexPath Logic",
        "video_id": "dfc5ef7f-0086-446d-9334-e616f5c99f42"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1341.6,
        "media_src": "92 Pointers v4.mp4",
        "number": 92,
        "poster_uid": "2018/03/09/07/55/33/b86ea746-0ad8-4bb7-8174-0534b3d76fc2/92 Pointers.jpg",
        "release_at": "2018-03-16T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E92-practicing-with-pointers"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We use Swift's pointer APIs to read a text file and split it into lines without using Swift's collection and string types.",
        "title": "Practicing with Pointers",
        "video_id": "ae73b590-b93e-44c2-af97-2a67ac5cd3e0"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1220.36,
        "media_src": "96 Forms 3.mp4",
        "number": 96,
        "poster_uid": "2018/03/29/07/28/31/60a0673e-e49b-4f09-8f3e-10b1a7f00cd4/96 Forms 3.jpg",
        "release_at": "2018-04-13T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E96-building-a-form-library-extracting-a-reusable-form-view-control"
            }
        ],
        "sample_duration": 40.72,
        "sample_src": "96 Forms Preview.mp4",
        "subscription_only": false,
        "synopsis": "We continue refactoring our forms code by creating a form table view controller as the first reusable component.",
        "title": "Extracting a Reusable Form View Controller",
        "video_id": "deb0666e-9c75-40cf-b2a3-0874aba5ed0b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 999.4,
        "media_src": "66 The Elm Architecture (Part 1).mp4",
        "number": 66,
        "poster_uid": "2017/09/05/12/27/03/068cece8-97d8-4b57-8250-c49a6ef476b3/66 The Elm Architecture (Part 1).jpg",
        "release_at": "2017-09-08T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E66-the-elm-architecture-part-1"
            }
        ],
        "sample_duration": 113.56,
        "sample_src": "66 The Elm Architecture (Part 1) Preview.mp4",
        "subscription_only": true,
        "synopsis": "We refactor our reducer-based project from episode #62 to use The Elm Architecture. Instead of interacting with UIKit directly, we build a virtual view hierarchy and let our Elm framework do the rest.",
        "title": "The Elm Architecture (Part 1)",
        "video_id": "40fffe18-d603-48cb-952d-8f7026f39f01"
    },
    {
        "collaborators": [
            "chris",
            "florian"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 281.04,
        "media_src": "84 App Architecture-corrected.mp4",
        "number": 84,
        "poster_uid": "2018/02/25/09/44/31/05800d7a-bf1c-4bc5-aac0-47f134611f73/84 App Architecture-new.jpg",
        "release_at": "2018-01-19T17:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Today we're releasing the early access edition of our new App Architecture book. We explain how it came about, what's in it, and how early access works.",
        "title": "Introducing Our New Book: App Architecture",
        "video_id": "171ff812-a94e-4b61-b9c0-d2c8d05838b2"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "swift-the-language",
            "functional-programming"
        ],
        "media_duration": 1319.76,
        "media_src": "90 Concurrent Map-corrected.mp4",
        "number": 90,
        "poster_uid": "2018/02/25/09/46/45/c6d6c01f-f191-4375-99ff-e6e239114b2b/90 Concurrent Map-new.jpg",
        "release_at": "2018-03-02T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E90-concurrent-map"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We implement a concurrent version of the map method for arrays.",
        "title": "Concurrent Map",
        "video_id": "cbdbc623-99ec-431d-8088-cd3fd112e78d"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "type-safe-api-wrappers"
        ],
        "media_duration": 2011.36,
        "media_src": "85 Wrapping LibGit-corrected.mp4",
        "number": 85,
        "poster_uid": "2018/02/25/09/44/48/59013271-ea01-44f8-aacc-1e4a29558fbf/85 Wrapping LibGit-new.jpg",
        "release_at": "2018-01-26T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E85-wrapping-libgit2"
            }
        ],
        "sample_duration": 64.48,
        "sample_src": "85 Wrapping LibGit Preview-corrected.mp4",
        "subscription_only": true,
        "synopsis": "We write a wrapper around the libgit2 C library to work with Git repositories from macOS and iOS apps \u2014 and for the fun of using Swift's pointer APIs!",
        "title": "Wrapping libgit2",
        "video_id": "554d5370-1590-4b6f-b871-91411f47b628"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 2011.6,
        "media_src": "72 Laufpark Introduction.mp4",
        "number": 72,
        "poster_uid": "2017/10/19/06/47/16/57f19d56-8956-442b-9c68-2c52887eec77/72 Laufpark Introduction.jpg",
        "release_at": "2017-10-20T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E72-adding-a-custom-view-to-a-view-state-driven-app"
            }
        ],
        "sample_duration": 124.84,
        "sample_src": "72 Laufpark Introduction Preview.mp4",
        "subscription_only": true,
        "synopsis": "We introduce a project we're going to work on over a few episodes. To get familiar with the code, we build a new feature using the app's view-state driven approach.",
        "title": "Adding a Custom View to a View-State Driven App",
        "video_id": "b52d6364-6de5-4e67-a8d9-098b120b6e82"
    },
    {
        "collaborators": [
            "ole",
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "swift-the-language"
        ],
        "media_duration": 1363.64,
        "media_src": "93 Optionals.mp4",
        "number": 93,
        "poster_uid": "2018/03/19/21/26/22/ff65a601-42c5-42df-96bf-e88276f59f1c/93 Optionals.jpg",
        "release_at": "2018-03-23T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": 30.88,
        "sample_src": "93 Optionals Preview.mp4",
        "subscription_only": true,
        "synopsis": "We discuss many considerations and techniques for working with optionals.",
        "title": "Handling Optionals",
        "video_id": "d9efe62c-acfa-428b-a0b2-b5fbb374e4fb"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1829.36,
        "media_src": "97 Forms 4.mp4",
        "number": 97,
        "poster_uid": "2018/03/30/07/44/03/6b6ca29d-5688-4e47-a11a-b69be088fd3e/97 Forms 4.jpg",
        "release_at": "2018-04-20T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E97-building-a-form-library-creating-a-reusable-form-driver"
            }
        ],
        "sample_duration": 29.32,
        "sample_src": "97 Forms Preview.mp4",
        "subscription_only": true,
        "synopsis": "We refactor the form driver class to be reusable and define the entire form in a simple function.",
        "title": "Creating a Reusable Form Driver",
        "video_id": "13145ec7-002c-42d3-836e-b602a5eb1af8"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1742.16,
        "media_src": "99 Forms 6.mp4",
        "number": 99,
        "poster_uid": "2018/04/26/07/27/12/5aed5a98-fa35-4d8a-b175-5dd15a138452/99 Forms 6.jpg",
        "release_at": "2018-05-04T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E99-building-a-form-library-creating-reusable-components"
            }
        ],
        "sample_duration": 29.6,
        "sample_src": "99 Forms 6 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We extract reusable toggle switch and text field components from our forms code and do more cleaning up in the process.",
        "title": "Creating Reusable Components",
        "video_id": "86428f9f-f448-410c-9210-50f17e994bf3"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture",
            "refactoring-large-view-controllers"
        ],
        "media_duration": 1130.4,
        "media_src": "104 Large View Controllers 2.mp4",
        "number": 104,
        "poster_uid": "2018/05/31/11/24/37/c059136d-f3ac-40f4-a2f3-6b363244232f/104 Large View Controllers 2.jpg",
        "release_at": "2018-06-08T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Wikipedia for iOS",
                "url": "https://github.com/objcio/wikipedia-ios/tree/swift-talk-104"
            }
        ],
        "sample_duration": 28.24,
        "sample_src": "104 Large View Controllers 2 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We extract Core Data-related code from the large view controller and move it into the model layer.",
        "title": "Extracting Model Code",
        "video_id": "2fa75575-3f32-4f90-8f79-a61c04e424f0"
    },
    {
        "collaborators": [
            "brandon-kase",
            "chris",
            "natalye",
            "juul"
        ],
        "collections": [
            "functional-programming",
            "libraries"
        ],
        "media_duration": 1420.48,
        "media_src": "89 The Expression Problem (Part 2)-corrected 2.mp4",
        "number": 89,
        "poster_uid": "2018/02/25/09/46/26/b55a2425-6e25-49d9-b300-77350aae7da4/89 The Expression Problem (Part 2)-new.jpg",
        "release_at": "2018-02-23T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E89-extensible-libraries-2-protocol-composition"
            }
        ],
        "sample_duration": 88.2,
        "sample_src": "89 The Expression Problem (Part 1) Preview.mp4",
        "subscription_only": true,
        "synopsis": "We show how protocol composition can be used to design extensible libraries, thereby solving the so-called \"Expression Problem.\"",
        "title": "Extensible Libraries 2: Protocol Composition",
        "video_id": "d5eff93e-b10c-46dc-9dfc-2b2ea2c06439"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1496.24,
        "media_src": "94 Forms 1.mp4",
        "number": 94,
        "poster_uid": "2018/03/27/08/20/25/d5530c5b-15b2-4612-9412-07041f482422/94 Forms 1.jpg",
        "release_at": "2018-03-30T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E94-building-a-form-library-introduction"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "This episode marks the beginning of a new series where we refactor a hand-coded settings form into a reusable, declarative form library. In this episode, we build the base version and discuss the design goals of the library.",
        "title": "Introduction",
        "video_id": "9ae62d25-dc0b-4944-bbcf-e88f748e6061"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1303.88,
        "media_src": "98 Forms 5.mp4",
        "number": 98,
        "poster_uid": "2018/04/05/10/15/43/78677090-be08-423b-9255-4bb8a0d4f45a/98 Forms 5.jpg",
        "release_at": "2018-04-27T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E98-building-a-form-library-cleaning-up-the-code"
            }
        ],
        "sample_duration": 43.2,
        "sample_src": "98 Forms 5 Preview.mp4",
        "subscription_only": true,
        "synopsis": "After refactoring in past episodes, it's time for some housekeeping: we clean up our form code and make it more reusable with generics.",
        "title": "Cleaning Up the Code",
        "video_id": "2cfd8319-1676-4911-a7a6-b9581c04f1d7"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture",
            "refactoring-large-view-controllers"
        ],
        "media_duration": 1571.48,
        "media_src": "103 Large View Controllers 1 v2.mp4",
        "number": 103,
        "poster_uid": "2018/05/29/17/54/40/b10a9cb3-4774-44a1-bfbc-7d638890269d/103 Large View Controllers 1.jpg",
        "release_at": "2018-06-01T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Wikipedia for iOS",
                "url": "https://github.com/objcio/wikipedia-ios/tree/swift-talk-103"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We begin refactoring a large view controller from the Wikipedia iOS app by pulling pieces of helper code out as pure functions.",
        "title": "Extracting Pure Functions",
        "video_id": "096e74fa-d0c6-437d-a717-0025e77f66ef"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture",
            "refactoring-large-view-controllers"
        ],
        "media_duration": 1586.76,
        "media_src": "106 Large View Controllers 4.mp4",
        "number": 106,
        "poster_uid": "2018/06/08/14/13/46/8c9128fb-0188-476e-ad50-ac66025f705b/106 Large View Controllers 4.jpg",
        "release_at": "2018-06-22T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Wikipedia for iOS",
                "url": "https://github.com/objcio/wikipedia-ios/tree/swift-talk-106"
            }
        ],
        "sample_duration": 25.52,
        "sample_src": "106 Large View Controllers 4 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We extract a child view controller to further slim down our large view controller, making sure the code keeps compiling throughout the process.",
        "title": "Child View Controllers",
        "video_id": "2aff491d-c50e-450b-a774-243525be1efd"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1622.48,
        "media_src": "101 Forms 7.mp4",
        "number": 101,
        "poster_uid": "2018/05/14/06/29/33/1b4de1a2-8d61-4f42-b3df-c2f884b045be/101 Forms 7.jpg",
        "release_at": "2018-05-18T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E101-building-a-form-library-cell-and-section-helpers"
            }
        ],
        "sample_duration": 32.28,
        "sample_src": "101 Forms 7 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We create helper functions for form cells and sections, which simplify managing references and propagating updates.",
        "title": "Cell and Section Helpers",
        "video_id": "d802a228-b825-492f-afe2-42c3e98e3533"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "libraries",
            "building-a-form-library"
        ],
        "media_duration": 1468.2,
        "media_src": "102 Forms 8.mp4",
        "number": 102,
        "poster_uid": "2018/05/18/10/49/20/1f7afccc-9bee-4542-a27a-93cac673b389/102 Forms 8.jpg",
        "release_at": "2018-05-25T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E102-building-a-form-library-declarative-syntax"
            }
        ],
        "sample_duration": 26.36,
        "sample_src": "102 Forms 8 Preview.mp4",
        "subscription_only": true,
        "synopsis": "After finishing the cleanup from the last episode, we refactor our forms API to be even more succinct and declarative.",
        "title": "Declarative Syntax",
        "video_id": "118ec0d2-e259-42a9-9a18-71bb88e066ff"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture",
            "refactoring-large-view-controllers"
        ],
        "media_duration": 1672.6,
        "media_src": "105 Large View Controllers 3 v2.mp4",
        "number": 105,
        "poster_uid": "2018/06/08/14/12/39/0580333b-5180-48b7-be7d-61ba581a5eb8/105 Large View Controllers 3.jpg",
        "release_at": "2018-06-15T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Wikipedia for iOS",
                "url": "https://github.com/objcio/wikipedia-ios/tree/swift-talk-105"
            }
        ],
        "sample_duration": 30.08,
        "sample_src": "105 Large View Controllers 3 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We refactor networking-related code out of the view controller, separating networking and data transformation logic from UI code in the process.",
        "title": "Extracting Networking Code",
        "video_id": "b6a6e2ab-46f0-4267-8031-d49aef390236"
    },
    {
        "collaborators": [
            "chris",
            "florian"
        ],
        "collections": [
            "experiments"
        ],
        "media_duration": 2920.6,
        "media_src": "100th Anniversary Live Q&A.mp4",
        "number": 100,
        "poster_uid": "2018/05/12/08/05/07/2c2cbb1b-1135-444f-ba93-f9d2b82e98c5/100th Anniversary Live Q&A.jpg",
        "release_at": "2018-05-12T10:31:00",
        "released": true,
        "resources": [
            {
                "subtitle": null,
                "title": null,
                "url": null
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "In our 100th episode we take questions from our viewers!",
        "title": "100th Episode Live Q&A",
        "video_id": "8a1b5e05-ee0d-4416-880a-0d92c4381a20"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "tooling"
        ],
        "media_duration": 1775.2,
        "media_src": "111 Debugger 3.mp4",
        "number": 111,
        "poster_uid": "2018/06/14/10/01/41/b45677ad-44e1-47a5-b946-aaa96b9619c8/111 Debugger 3.jpg",
        "release_at": "2018-07-27T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E111-ios-remote-debugger-receiving-data"
            }
        ],
        "sample_duration": 27.08,
        "sample_src": "111 Debugger 3 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We implement a JSON over TCP decoder to enable the debug client to receive data from the Mac app.",
        "title": "iOS Remote Debugger: Receiving Data",
        "video_id": "eda044b8-82d4-45f0-97a1-4fd0744b68ef"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "tooling"
        ],
        "media_duration": 1710.52,
        "media_src": "109 Debugger 1.mp4",
        "number": 109,
        "poster_uid": "2018/06/12/10/01/02/b75e55af-2426-43bc-8dc4-f639073ccc62/109 Debugger 1.jpg",
        "release_at": "2018-07-13T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E109-ios-remote-debugger-connecting-with-bonjour"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We're building a remote view state debugger, starting with the networking code on the client.",
        "title": "iOS Remote Debugger: Connecting with Bonjour",
        "video_id": "11fdf93d-afe7-4caa-a2be-2d51f9400a02"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "server-side-swift",
            "swift-the-language"
        ],
        "media_duration": 1486.32,
        "media_src": "115 XML Decoding 1 v2.mp4",
        "number": 115,
        "poster_uid": "2018/08/21/07/39/06/29621019-ae85-414d-ae36-558c2413e124/115 XML Decoding 1.jpg",
        "release_at": "2018-08-24T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E115-building-a-custom-xml-decoder"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We implement a custom XML decoder that allows us to decode responses from an XML API using Decodable.",
        "title": "Building a Custom XML Decoder",
        "video_id": "c25ca9de-ece3-453b-ace4-e43ca4662e4b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture",
            "refactoring-large-view-controllers"
        ],
        "media_duration": 1791.92,
        "media_src": "107 Large View Controllers 5.mp4",
        "number": 107,
        "poster_uid": "2018/06/12/07/52/48/af4ed51b-3379-478f-9b13-7ef41222e1ad/107 Large View Controllers 5.jpg",
        "release_at": "2018-06-29T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Wikipedia for iOS",
                "url": "https://github.com/objcio/wikipedia-ios/tree/swift-talk-107"
            }
        ],
        "sample_duration": 32.12,
        "sample_src": "107 Large View Controllers 5 Preview.m4v",
        "subscription_only": true,
        "synopsis": "We use the child view controller we created last time to factor out more code from the large view controller.",
        "title": "Child View Controllers (2)",
        "video_id": "1fab21c7-b5c4-42b7-90d7-99ac2e9d5d81"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-layout-library"
        ],
        "media_duration": 1878.68,
        "media_src": "118 Responsive Layout 1 v2.mp4",
        "number": 118,
        "poster_uid": "2018/09/11/11/09/38/eb942da8-63a1-40ec-b843-6c094f8ffebe/118 Responsive Layout 1.jpg",
        "release_at": "2018-09-14T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E118-introduction-prototype"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We start building a responsive layout library that makes it easy to create layouts for all screen and font sizes.",
        "title": "Introduction & Prototype",
        "video_id": "f157ecb6-8f9e-4efb-8fbe-6290cee9fea7"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1499.52,
        "media_src": "68 The Elm Architecture (Part 2).mp4",
        "number": 68,
        "poster_uid": "2017/09/07/10/44/38/4241392d-6fc7-4e18-98b0-26ab74077f6c/68 The Elm Architecture (Part 2).jpg",
        "release_at": "2017-09-22T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E68-the-elm-architecture-part-2"
            }
        ],
        "sample_duration": 112.84,
        "sample_src": "68 The Elm Architecture (Part 2) Preview.mp4",
        "subscription_only": true,
        "synopsis": "We extend our Elm-style app with a more dynamic view hierarchy by adding a navigation controller and a table view.",
        "title": "The Elm Architecture (Part 2)",
        "video_id": "dcb3593e-d3ee-4ad2-a165-686ae10e5c2a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "juul",
            "natalye"
        ],
        "collections": [
            "architecture"
        ],
        "media_duration": 1860.6,
        "media_src": "62 Testable View Controllers with Reducers.mp4",
        "number": 62,
        "poster_uid": "2017/07/21/11/51/33/29465100-9eab-4074-9bd9-8172bd03bce5/62 Testable View Controllers with Reducers.jpg",
        "release_at": "2017-08-11T15:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E62-testable-view-controllers-with-reducers"
            }
        ],
        "sample_duration": 160.28,
        "sample_src": "62 Testable View Controllers with Reducers Preview.mp4",
        "subscription_only": true,
        "synopsis": "We show the reducer pattern to simplify state management and to make typical view controller code more testable.",
        "title": "Testable View Controllers with Reducers",
        "video_id": "d6b768fc-2224-4b26-a3e8-50682fcf8607"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "tooling"
        ],
        "media_duration": 1558.68,
        "media_src": "112 Debugger 4.mp4",
        "number": 112,
        "poster_uid": "2018/06/28/10/35/11/2e9a5ee8-1174-4132-8249-cc7765ec9210/112 Debugger 4.jpg",
        "release_at": "2018-08-03T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E112-ios-remote-debugger-the-network-framework"
            }
        ],
        "sample_duration": 21.32,
        "sample_src": "112 Debugger 4 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We use Apple's new Network framework to simplify our own code.",
        "title": "iOS Remote Debugger: The Network Framework",
        "video_id": "be3cc2ea-b1c2-4c01-a80b-ba3dd8e4f94d"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-form-library"
        ],
        "media_duration": 1665.4,
        "media_src": "113 Forms 9.mp4",
        "number": 113,
        "poster_uid": "2018/06/22/15/27/34/18b43741-dcbc-4441-8866-9137ab7d7e3b/113 Forms 9.jpg",
        "release_at": "2018-08-10T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E113-text-fields-multi-select-and-nested-forms"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "We return to the form library project and add several features to simplify common tasks.",
        "title": "Text Fields, Multi-Select, and Nested Forms",
        "video_id": "85e62bb5-058f-48d5-a1e6-968dd0dc1a50"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-form-library"
        ],
        "media_duration": 895.72,
        "media_src": "117 Forms 10 v2.mp4",
        "number": 117,
        "poster_uid": "2018/08/21/09/27/22/aa92e06c-be78-48d3-b811-aca9ff545f05/117 Forms 10.jpg",
        "release_at": "2018-09-07T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E117-showing-hiding-sections"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": false,
        "synopsis": "Using a simple key path API, we add the ability to control the visibility of sections by any condition.",
        "title": "Showing & Hiding Sections",
        "video_id": "cab4003a-00c2-4fda-aba3-ee58893fed9a"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "server-side-swift",
            "swift-the-language"
        ],
        "media_duration": 1408.88,
        "media_src": "114 Reflection.mp4",
        "number": 114,
        "poster_uid": "2018/08/14/15/45/02/8c9404d6-ca7f-48ca-adf6-506a234861a6/114 Reflection.jpg",
        "release_at": "2018-08-17T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E114-reflection-with-mirror-and-decodable"
            }
        ],
        "sample_duration": 29.56,
        "sample_src": "114 Reflection Preview.mp4",
        "subscription_only": true,
        "synopsis": "We're using Swift's Mirror and Decodable APIs to generate database queries for structs in our Swift Talk backend project.",
        "title": "Reflection with Mirror and Decodable",
        "video_id": "9ba4f7ad-3ddf-4fcb-8eca-094b0a28ebb5"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "architecture",
            "refactoring-large-view-controllers"
        ],
        "media_duration": 1646.6,
        "media_src": "108 Large View Controllers 6.mp4",
        "number": 108,
        "poster_uid": "2018/06/26/12/49/32/e22330bd-ccf3-464a-afaf-8d537142829d/108 Large View Controllers 6.jpg",
        "release_at": "2018-07-06T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/wikipedia-ios/tree/swift-talk-108-real"
            }
        ],
        "sample_duration": 30.88,
        "sample_src": "108 Large View Controllers 6 Preview.mp4",
        "subscription_only": true,
        "synopsis": "In the last episode of this series, we factor out view code from the large view controller into a custom view class.",
        "title": "Extracting View Code",
        "video_id": "d8f7b7bb-bd9b-4f22-a144-1171ec187bfe"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-layout-library"
        ],
        "media_duration": 1465.4,
        "media_src": "119 Responsive Layout 2 v2.mp4",
        "number": 119,
        "poster_uid": "2018/09/11/11/10/14/97951f14-fea0-4b64-87f3-d043a3518e6e/119 Responsive Layout 2.jpg",
        "release_at": "2018-09-21T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E119-spacing-better-syntax"
            }
        ],
        "sample_duration": 20.88,
        "sample_src": "119 Responsive Layout 2 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We add some features to our layout library \u2014 starting with horizontal and vertical spacing \u2014 along with a better syntax to define layouts.",
        "title": "Spacing & Better Syntax",
        "video_id": "276d08c9-62cc-4f63-9c1e-0d38c401306b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "tooling"
        ],
        "media_duration": 1358.36,
        "media_src": "110 Debugger 2.mp4",
        "number": 110,
        "poster_uid": "2018/06/14/08/01/44/2ee7afa5-b4f5-43ef-9af1-9463f69bc4b4/110 Debugger 2.jpg",
        "release_at": "2018-07-20T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E110-ios-remote-debugger-sending-data"
            }
        ],
        "sample_duration": 32.12,
        "sample_src": "110 Debugger 2 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We create a class that encapsulates the complexities of sending data via an output stream.",
        "title": "iOS Remote Debugger: Sending Data",
        "video_id": "5dbf3160-fb5b-4e5a-88da-3163ea09883b"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "server-side-swift",
            "swift-the-language"
        ],
        "media_duration": 1338.56,
        "media_src": "116 XML Decoding 2 v2.mp4",
        "number": 116,
        "poster_uid": "2018/08/21/08/40/49/d98ebdbe-688a-467b-9370-7bdf3ada2e41/116 XML Decoding 2.jpg",
        "release_at": "2018-08-31T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E116-building-a-custom-xml-decoder-part2"
            }
        ],
        "sample_duration": 22.92,
        "sample_src": "116 XML Decoding 2 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We add support for arrays by implementing an unkeyed decoding container and use custom decoding logic for dates and URLs.",
        "title": "Building a Custom XML Decoder (Part 2)",
        "video_id": "84dfd6a0-cd37-4d4d-9b80-b3252ecd59e8"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-layout-library"
        ],
        "media_duration": 1495.84,
        "media_src": "120 Responsive Layout 3.mp4",
        "number": 120,
        "poster_uid": "2018/09/14/12/51/35/e9c53b03-e8a4-418d-958c-182589079a65/120 Responsive Layout 3.jpg",
        "release_at": "2018-09-28T14:00:00",
        "released": true,
        "resources": [
            {
                "subtitle": "Written in Swift 4.1",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E120-refactoring-for-efficiency-upcoming-features"
            }
        ],
        "sample_duration": 22.24,
        "sample_src": "120 Responsive Layout 3 Preview.mp4",
        "subscription_only": true,
        "synopsis": "We refactor our code to remove duplication, improve efficiency, and enable features like flexible spacing.",
        "title": "Refactoring for Efficiency & Upcoming Features",
        "video_id": "fc682394-04ff-4994-a97b-d6e96f3a1caf"
    },
    {
        "collaborators": [
            "chris",
            "florian",
            "natalye",
            "juul"
        ],
        "collections": [
            "building-a-layout-library"
        ],
        "media_duration": 1211.48,
        "media_src": "123 Responsive Layout 6 v3.mp4",
        "number": 123,
        "poster_uid": "2018/10/08/10/33/11/f354d985-884c-46fb-8404-2e1c0bbce7ef/123 Responsive Layout 6.jpg",
        "release_at": "2018-10-19T14:00:00",
        "released": false,
        "resources": [
            {
                "subtitle": "Written in Swift 4.2",
                "title": "Sample Project",
                "url": "https://github.com/objcio/S01E123-margins-and-backgrounds"
            }
        ],
        "sample_duration": null,
        "sample_src": null,
        "subscription_only": true,
        "synopsis": "We build upon the nested layout feature from last time to support layout margins, backgrounds, and more.",
        "title": "Margins and Backgrounds",
        "video_id": "224ddbda-af37-481e-a45b-51014b8cb299"
    }
]
